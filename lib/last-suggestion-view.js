"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class LastSuggestionView {
    constructor() {
        this.element = document.createElement('atom-text-editor');
        this.element.setAttribute('mini', '');
        this.element.removeAttribute('tabindex');
        this.editor = this.element.getModel();
    }
    destroy() {
        return this.element.remove();
    }
    setText(text) {
        const grammar = this.editor.getGrammar();
        if (!grammar || grammar.scopeName !== 'hint.haskell') {
            this.editor.setGrammar(atom.grammars.grammarForScopeName('hint.haskell'));
        }
        return this.editor.setText(text);
    }
    getText() {
        return this.editor.getText();
    }
}
exports.LastSuggestionView = LastSuggestionView;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFzdC1zdWdnZXN0aW9uLXZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbGFzdC1zdWdnZXN0aW9uLXZpZXcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFNQTtJQUdFO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLENBQUE7UUFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFBO1FBQ3JDLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ3hDLElBQUksQ0FBQyxNQUFNLEdBQUksSUFBSSxDQUFDLE9BQWUsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtJQUNoRCxDQUFDO0lBRU0sT0FBTztRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFBO0lBQzlCLENBQUM7SUFFTSxPQUFPLENBQUUsSUFBWTtRQUMxQixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFBO1FBQ3hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEtBQUssY0FBYyxDQUFDLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUE7UUFDM0UsQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRU0sT0FBTztRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQzlCLENBQUM7Q0FDRjtBQXpCRCxnREF5QkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogZGVjYWZmZWluYXRlIHN1Z2dlc3Rpb25zOlxuICogRFMxMDI6IFJlbW92ZSB1bm5lY2Vzc2FyeSBjb2RlIGNyZWF0ZWQgYmVjYXVzZSBvZiBpbXBsaWNpdCByZXR1cm5zXG4gKiBEUzEwMzogUmV3cml0ZSBjb2RlIHRvIG5vIGxvbmdlciB1c2UgX19ndWFyZF9fXG4gKiBGdWxsIGRvY3M6IGh0dHBzOi8vZ2l0aHViLmNvbS9kZWNhZmZlaW5hdGUvZGVjYWZmZWluYXRlL2Jsb2IvbWFzdGVyL2RvY3Mvc3VnZ2VzdGlvbnMubWRcbiAqL1xuZXhwb3J0IGNsYXNzIExhc3RTdWdnZXN0aW9uVmlldyB7XG4gIHB1YmxpYyBlbGVtZW50OiBIVE1MRWxlbWVudFxuICBwcml2YXRlIGVkaXRvcjogQXRvbVR5cGVzLlRleHRFZGl0b3JcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2F0b20tdGV4dC1lZGl0b3InKVxuICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21pbmknLCAnJylcbiAgICB0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCd0YWJpbmRleCcpXG4gICAgdGhpcy5lZGl0b3IgPSAodGhpcy5lbGVtZW50IGFzIGFueSkuZ2V0TW9kZWwoKVxuICB9XG5cbiAgcHVibGljIGRlc3Ryb3kgKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQucmVtb3ZlKClcbiAgfVxuXG4gIHB1YmxpYyBzZXRUZXh0ICh0ZXh0OiBzdHJpbmcpIHtcbiAgICBjb25zdCBncmFtbWFyID0gdGhpcy5lZGl0b3IuZ2V0R3JhbW1hcigpXG4gICAgaWYgKCFncmFtbWFyIHx8IGdyYW1tYXIuc2NvcGVOYW1lICE9PSAnaGludC5oYXNrZWxsJykge1xuICAgICAgdGhpcy5lZGl0b3Iuc2V0R3JhbW1hcihhdG9tLmdyYW1tYXJzLmdyYW1tYXJGb3JTY29wZU5hbWUoJ2hpbnQuaGFza2VsbCcpKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5lZGl0b3Iuc2V0VGV4dCh0ZXh0KVxuICB9XG5cbiAgcHVibGljIGdldFRleHQgKCkge1xuICAgIHJldHVybiB0aGlzLmVkaXRvci5nZXRUZXh0KClcbiAgfVxufVxuIl19